#version 450

layout (local_size_x = 32) in;

layout(set = 0, binding = 0) writeonly buffer bout { float result[]; };
layout(set = 0, binding = 1) readonly  buffer bina { float in_a[]; };
layout(set = 0, binding = 2) readonly  buffer binb { float in_b[]; };
layout(set = 0, binding = 3) readonly  buffer binc { float in_c[]; };

void main() {
    //constants injected in python
    //in_a is a NxM matrix
    const uint N = {{N}};
    const uint M = {{M}};
    const uint index   = gl_GlobalInvocationID.x;

    const uint i0         = uint(in_b[0]);
    const uint row        = index / M;
    const uint index_c    = row;
    const uint add_active = uint( (index % M) == i0 );

    result[index] = in_a[index] + in_c[index_c]*add_active;
}